.ORIG x3000
LD R0 NUM1
LD R1 NUM2 

OUT_LOOP LDR R2, R0, #0
LD R6, MASK1
AND R5, R2, R6
BRz STOP

LOOP_IN LDR R3, R1, #0
LDR R2, R0, #0
AND R5, R3, R6

BRz OUT_INC
JSR COMPARE
ADD R4, R4, #0
BRz NO_SWAP
STR R2, R1, #0
STR R3, R0, #0
NO_SWAP ADD R1, R1, #1
BR LOOP_IN

OUT_INC ADD R0, R0, #1
ADD R1, R0, #1
BR OUT_LOOP

STOP halt 



COMPARE
    ST R0, SPACE1
    ST R2, SPACE2
    ST R3, SPACE3
    ST R7, SPACE4
    
    LD R4, MASK1
    AND R2, R2, R4
    AND R3, R3, R4
    
    ADD R0, R2, #0
    JSR SHIFT
    ADD R2, R0, #0
    ADD R0, R3, #0
    JSR SHIFT
    ADD R3, R0, #0
    
    AND R4, R4, #0
    NOT R3, R3
    ADD R3, R3, #1
    ADD R2, R2, R3
    BRn ZERO
    ADD R4, R4, #1

ZERO LD R0, SPACE1
    LD R2, SPACE2
    LD R3, SPACE3
    LD R7, SPACE4
    RET
    
    
    
SHIFT
    ST R1, SPACE5
    ST R2, SPACE6
    AND R1, R1, #0
    ADD R1, R1, #8; R1 has count
    AND R2, R2, #0
    ADD R2, R2, #1
    NOT R2, R2
    ADD R2, R2, #1; R2 has -1
    
LOOP ADD R0, R0, #0
    BRn ONE
    ADD R0, R0, R0
    BR NEXT
ONE ADD R0, R0, R0
    ADD R0, R0, #1
NEXT ADD R1, R1, R2; subtracts 1 from count
    BRp LOOP; if count is still > 0
    
    LD R1, SPACE5
    LD R2, SPACE6
    RET
    

NUM1 .Fill x4000
NUM2 .Fill x4001 
MASK1 .Fill xFF00

SPACE1 .BLKW #1
SPACE2 .BLKW #1
SPACE3 .BLKW #1
SPACE4 .BLKW #1
SPACE5 .BLKW #1
SPACE6 .BLKW #1

.END

.ORIG x4000
    .FILL xCC74 ; m[x4000] = xCC74
    .FILL xAB27 ; m[x4001] = xAB27
    .FILL x1220 ; m[x4002] = x1220
    .FILL x3404 ; m[x4003] = x3404
    .FILL x0000 ; m[x4004] = x0000
.END
